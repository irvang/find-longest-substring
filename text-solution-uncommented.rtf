{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red79\green123\blue61;
\red202\green202\blue202;\red212\green214\blue154;\red194\green126\blue101;\red167\green197\blue152;\red70\green137\blue204;
\red140\green211\blue254;\red183\green111\blue179;\red67\green192\blue160;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c37647\c54510\c30588;
\cssrgb\c83137\c83137\c83137;\cssrgb\c86275\c86275\c66667;\cssrgb\c80784\c56863\c47059;\cssrgb\c70980\c80784\c65882;\cssrgb\c33725\c61176\c83922;
\cssrgb\c61176\c86275\c99608;\cssrgb\c77255\c52549\c75294;\cssrgb\c30588\c78824\c69020;}
\margl1440\margr1440\vieww23960\viewh13820\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 //====TESTS\strokec5 \
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'dgfddsssdsfdffdfdfadfhheedsfdfcdfdxffdh'\strokec5 , \strokec8 2\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'dgfddsssdsfdffdfdfadfhheedsfdfcdfdxffdh'\strokec5 , \strokec8 3\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'dgfddsssdsfdffdfdfadfhheedsfdfcdfdxffdh'\strokec5 , \strokec8 4\strokec5 );\
\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'aecbcaacbceb'\strokec5 , \strokec8 3\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'aecbcaabceb'\strokec5 , \strokec8 2\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'aabacadbae'\strokec5 , \strokec8 2\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'abacaabaa'\strokec5 , \strokec8 2\strokec5 );\
\strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec7 'abacaadbafaaaad'\strokec5 , \strokec8 3\strokec5 );\
\
\
\strokec9 function\strokec5  \strokec6 findLongestSubstringWithUniqueCharacters\strokec5 (\strokec10 str\strokec5 , \strokec10 n\strokec5 ) \{\
\
\'a0\'a0\'a0\'a0\strokec4 //Indexes for substring\strokec5 \
\'a0\'a0\'a0\'a0\strokec9 let\strokec5  \strokec10 subStart\strokec5  = \strokec8 0\strokec5 ,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec10 subEnd\strokec5  = \strokec8 1\strokec5 ;\
\
\'a0\'a0\'a0\'a0\strokec9 let\strokec5  \strokec10 longestSubstring\strokec5  = \strokec7 ''\strokec5 ;\
\
\'a0\'a0\'a0\'a0\strokec11 while\strokec5  (\strokec9 true\strokec5 ) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec9 let\strokec5  \strokec10 subString\strokec5  = \strokec10 str\strokec5 .\strokec6 substring\strokec5 (\strokec10 subStart\strokec5 , \strokec10 subEnd\strokec5 );\strokec4 //get a substring\strokec5 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec11 if\strokec5  (\strokec6 isSubsetLessThanOrEqualToK\strokec5 (\strokec10 subString\strokec5 , \strokec10 n\strokec5 )) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec11 if\strokec5  (\strokec10 subString\strokec5 .\strokec10 length\strokec5  > \strokec10 longestSubstring\strokec5 .\strokec10 length\strokec5 ) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec10 longestSubstring\strokec5  = \strokec10 subString\strokec5 ;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec10 subEnd\strokec5 ++;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\} \strokec11 else\strokec5  \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec10 subStart\strokec5 ++\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\strokec11 if\strokec5  (\strokec10 longestSubstring\strokec5 .\strokec10 length\strokec5  >= \strokec10 str\strokec5 .\strokec10 length\strokec5  - \strokec10 subStart\strokec5 ) \strokec11 break\strokec5 ;\
\'a0\'a0\'a0\'a0\}\
\
\'a0\'a0\'a0\'a0\strokec12 console\strokec5 .\strokec6 log\strokec5 (\strokec10 longestSubstring\strokec5 , \strokec7 '-'\strokec5 , \strokec10 str\strokec5 .\strokec6 indexOf\strokec5 (\strokec10 longestSubstring\strokec5 , \strokec8 0\strokec5 ));\
\'a0\'a0\'a0\'a0\strokec11 return\strokec5  [\strokec10 longestSubstring\strokec5 , \strokec10 str\strokec5 .\strokec6 indexOf\strokec5 (\strokec10 longestSubstring\strokec5 , \strokec8 0\strokec5 )];\
\}\
\
\strokec9 function\strokec5  \strokec6 isSubsetLessThanOrEqualToK\strokec5 (\strokec10 str\strokec5 , \strokec10 n\strokec5 ) \{\
\'a0\'a0\'a0\'a0\strokec9 const\strokec5  \strokec10 newSet\strokec5  = \strokec9 new\strokec5  \strokec12 Set\strokec5 (\strokec10 str\strokec5 );\
\'a0\'a0\'a0\'a0\strokec11 return\strokec5  \strokec10 newSet\strokec5 .\strokec10 size\strokec5  <= \strokec10 n\strokec5 ;\
\}\
}